
@using CEMIS.Web.Utilities

@model GoodsAndServicesHeaderViewModel
@{
    ViewBag.Title = "View/Edit Goods And Services";
    var i = 1;
}

@section styles {
    <style>
        .form-inline .form-group {
            margin-bottom: 15px !important;
        }
    </style>
}

<div class="panel-title"></div>
<div class="panel-heading">
    <h3 style="text-align:center; text-decoration:underline"><b>EXPENDITURE RETURNS </b></h3>

</div>
@using (Html.BeginForm("Edit", "GoodsAndServices", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    var form = Webutilities.GenerateGoodsAndServicesEdit(Model.GoodsAndServicesItemsViewModel , Model.GoodsAndServicesSettingsViewModel);

    <section class="card" style="margin-top:50px">

        <div class="row" style="margin-top:10px">
            <div class="col-md-7">
                <label class="col-sm-3">MDA:  </label>
                <div class="col-sm-4"><input type="text" required name="MDA" value="NATIONAL COUNCIL FOR TERTIARY" /></div>
            </div>

            <div class="col-md-5">

            </div>
        </div>

        <div class="row" style="margin-top:10px; margin-bottom:10px">
            <div class="col-md-7">
                <label class="col-sm-3">PERIOD REPORTING: </label>
                <div class="col-sm-4"><select style="width:92%" name="PeriodMonth" asp-items="Html.GetEnumSelectList(typeof(Month))"></select></div>
            </div>

            <div class="col-md-5">
                <label class="col-sm-3">YEAR:  </label>
                <div class="col-sm-2"><input type="number" required name="PeriodYear" /></div>

            </div>
        </div>

        <div class="row" style="margin-top:10px">
            <div class="col-md-7">
                <label class="col-sm-3">RETURN ON:</label>
                <div class="col-sm-4"><input type="text" required name="ReturnOn" value="GOODS & SERVICES" /></div>
            </div>

            <div class="col-md-5">
                <label class="col-sm-3">FUND TYPE:</label>
                <div class="col-sm-2"><input type="text" required name="FundType" value="IGF" /></div>
            </div>
        </div>

    </section>


    <section class="card" style="margin-top:20px">

        @Html.Raw(form)


    </section>

    <a class="btn btn-default" href="@Url.Action("Index","GoodsAndServices")">BACK</a>
    <input type="submit" class="btn btn-success" style="float:right" value="Save" />
}

    <script>
    function calculateBalance(Id) {
        const approvedBudgetCont = '@ApplicationConstant.approvedBuget';
        const amountExpendedCont = '@ApplicationConstant.amountExpended';
        const cummulativeAmtCont = '@ApplicationConstant.cummulativeAmt';
        const totalAmtCont = '@ApplicationConstant.totalAmt';
        const balanceCont = '@ApplicationConstant.balance';
        let code;
        let matches = Id.match(/(\d+)/);

        if (matches) {
            code = matches[0];
        }

        let approvedBugget = $("#" + approvedBudgetCont + code).val() === "" ? 0 : parseFloat($("#" + approvedBudgetCont + code).val());
        let amountExpended = $("#" + amountExpendedCont + code).val() === "" ? 0 : parseFloat($("#" + amountExpendedCont + code).val());
        let cummulativeAmt = $("#" + cummulativeAmtCont + code).val() === "" ? 0 : parseFloat($("#" + cummulativeAmtCont + code).val());
        let totalAmt = amountExpended + cummulativeAmt;
        let balance = approvedBugget - totalAmt;
        $("#" + totalAmtCont + code).val(totalAmt);
        $("#" + balanceCont + code).val(balance);

    }

</script>



